{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Virtual Machine size selection"
      }
    },
    "StorageAccountName": {
      "type": "string",
      "defaultValue": "azna0fw0fw01",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type."
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "existing",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Storage Account"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "existing",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "storageAccountExistingRG": {
      "type": "string",
      "defaultValue": "AZNA-RG-FW01",
      "metadata": {
        "description": "Resource Group containing existing storage account"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "anobre",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "virtualnetName": {
      "type": "string",
      "defaultValue": "AZNA-VN-Prod",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "AZNA-FW-FW01",
      "metadata": {
        "description": "Name for FortiGate virtual appliance."
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "AZNA-RG-ExpressRoute",
      "metadata": {
        "description": "Identifies the Resource Group where the Virtual Network resides"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.190.0.0/16",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.190.158.0/24",
      "metadata": {
        "description": "Subnet 1 (Outside) Prefix"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "AZNA-SN-DMZOut",
      "metadata": {
        "description": "Subnet 1 (Outside) Name"
      }
    },
    "Subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.190.1.0/24",
      "metadata": {
        "description": "Subnet 2 (Outside) Prefix"
      }
    },
    "Subnet2Name": {
      "type": "string",
      "defaultValue": "AZNA-SN-Servers",
      "metadata": {
        "description": "Subnet 2 (Outside) Name"
      }
    },
    "Subnet3Prefix": {
      "type": "string",
      "defaultValue": "10.190.201.0/24",
      "metadata": {
        "description": "Subnet 3 (DMZ) Prefix"
      }
    },
    "Subnet3Name": {
      "type": "string",
      "defaultValue": "AZNA-SN-DMZ1",
      "metadata": {
        "description": "Subnet 3 (DMZ) Name"
      }
    },
    "fortiGateIP1": {
      "type": "string",
      "defaultValue": "10.190.158.10",
      "metadata": {
        "description": "Static IP for public facing NIC of the FortiGate virtual appliance."
      }
    },
    "fortiGateIP2": {
      "type": "string",
      "defaultValue": "10.190.1.10",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the FortiGate virtual appliance."
      }
    },
    "fortiGateIP3": {
      "type": "string",
      "defaultValue": "10.190.201.10",
      "metadata": {
        "description": "Static IP for DMZ network facing NIC of the FortiGate virtual appliance."
      }
    },
    "fortiGateBIP1": {
      "type": "string",
      "defaultValue": "10.190.158.11",
      "metadata": {
        "description": "Static IP for public facing NIC of the second FortiGate virtual appliance."
      }
    },
    "fortiGateBIP2": {
      "type": "string",
      "defaultValue": "10.190.1.11",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the second FortiGate virtual appliance."
      }
    },
    "fortiGateBIP3": {
      "type": "string",
      "defaultValue": "10.190.201.11",
      "metadata": {
        "description": "Static IP for protected network facing NIC of the second FortiGate virtual appliance."
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/anobre1/FortigateAzure/master",
      "metadata": {
        "description": "Base URL of the solution template gallery package",
        "artifactsBaseUrl": ""
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "location"
      }
    }
  },
  "variables": {
    "storageAccountType": "[parameters('StorageAccountType')]",
    "vmStorageAccountContainerName": "vhds",

    "VNetName": "[parameters('virtualnetName')]",
    "Subnet1Name": "[parameters('Subnet1Name')]",
    "Subnet2Name": "[parameters('Subnet2Name')]",
	"Subnet3Name": "[parameters('Subnet2Name')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet2Name'))]",
	"subnet3Ref": "[concat(variables('vnetID'),'/subnets/', variables('Subnet3Name'))]",

    "VNetAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
    "Subnet1Prefix": "[parameters('Subnet1Prefix')]",
    "Subnet2Prefix": "[parameters('Subnet2Prefix')]",
	"Subnet3Prefix": "[parameters('Subnet3Prefix')]",

    "vmName": "[concat(parameters('vmNamePrefix'),'-A')]",
    "vm2Name": "[concat(parameters('vmNamePrefix'),'-B')]",

    "routeTable1Name": "AZNA-RT-outside-A",
    "routeTable2Name": "AZNA-RT-inside-A",
    "routeTable3Name": "AZNA-RT-dmz-A",
    "FGProtectedAddress": "[parameters('fortiGateIP2')]",
    "FGPubFacingAddress": "[parameters('fortiGateIP1')]",
    "FGDMZFacingAddress": "[parameters('fortiGateIP3')]",
    "routeTable1BName": "AZNA-RT-outside-B",
    "routeTable2BName": "AZNA-RT-inside-B",
	"routeTable3BName": "AZNA-RT-dmz-B",
    "FGBProtectedAddress": "[parameters('fortiGateBIP2')]",
    "FGBPubFacingAddress": "[parameters('fortiGateBIP1')]",
    "FGBDMZFacingAddress": "[parameters('fortiGateBIP3')]",
    "apiVer": "2015-06-15",

    "network_NIC_fg11_Name": "[concat(variables('vmName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg21_Name": "[concat(variables('vm2Name'),'Nic0')]",
    "network_NIC_fg21_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg21_Name'))]",

    "storage_Acct_1_Id": "[resourceId('Microsoft.Storage/storageAccounts',parameters('StorageAccountName'))]",

    "storageAccountSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','storageAccount',parameters('storageAccountNewOrExisting'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "vMAndNICSetupURL": "[concat(parameters('artifactsBaseUrl'),'/','vm-',parameters('VirtualMachineSize'),'.json')]"
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('StorageAccountName')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('storageAccountExistingRG')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('virtualnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "subnet1Name": {
            "value": "[parameters('Subnet1Name')]"
          },
          "subnet1AddressPrefix": {
            "value": "[parameters('Subnet1Prefix')]"
          },
          "subnet2Name": {
            "value": "[parameters('Subnet2Name')]"
          },
          "subnet2AddressPrefix": {
            "value": "[parameters('Subnet2Prefix')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('virtualNetworkExistingRGName')]"
          },
          "routeTable1Name": {
            "value": "[variables('routeTable1Name')]"
          },
          "routeTable2Name": {
            "value": "[variables('routeTable2Name')]"
          }
        }
      }
    },
	{
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "SettingUpSecondaryNICsandVMs",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vMAndNICSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('vmNamePrefix')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "vm2Name": {
            "value": "[variables('vm2Name')]"
          },
          "virtualnetName": {
            "value": "[parameters('virtualnetName')]"
          },
          "subnet2Ref": {
            "value": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet2ID.value]"
          },
          "FGProtectedAddress": {
            "value": "[variables('FGProtectedAddress')]"
          },
          "FGBProtectedAddress": {
            "value": "[variables('FGBProtectedAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "StorageAccountName": {
            "value": "[parameters('StorageAccountName')]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          }
        }
      }
    }
  ]
}
